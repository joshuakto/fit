name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        # Corresponds to Obsidian 1.4.0
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      id: lint
      run: npm run lint -- --format=compact
      continue-on-error: true

    - name: Run TypeScript compiler
      id: typecheck
      run: npm run typecheck
      continue-on-error: true

    - name: Run tests with coverage
      id: test
      run: npm test -- --coverage
      continue-on-error: true

    - name: Generate status summary
      id: summary
      run: |
        lint_status="${{ steps.lint.outcome }}"
        typecheck_status="${{ steps.typecheck.outcome }}"
        test_status="${{ steps.test.outcome }}"

        lint_icon="❌"; [[ "$lint_status" == "success" ]] && lint_icon="✅"
        typecheck_icon="❌"; [[ "$typecheck_status" == "success" ]] && typecheck_icon="✅"
        test_icon="❌"; [[ "$test_status" == "success" ]] && test_icon="✅"

        if [[ "$lint_status" == "success" && "$typecheck_status" == "success" && "$test_status" == "success" ]]; then
          overall_message="🎉 **All checks passed!** Great work on maintaining code quality."
        elif [[ "$typecheck_status" != "success" || "$test_status" != "success" ]]; then
          overall_message="🚫 **Critical failures detected.**"
        else
          overall_message="⚠️ **Linting issues detected.** Please fix code style issues."
        fi

        cat << EOF > pr_comment.md
        ## 🔍 Code Quality Check Results

        | Check | Status | Details |
        |-------|--------|---------|
        | **Linting** | ${lint_icon} | ESLint code quality check |
        | **Type Check** | ${typecheck_icon} | TypeScript compilation |
        | **Unit Tests** | ${test_icon} | Jest test execution |

        ${overall_message}
        <details>
        <summary>📊 Test Coverage Report</summary>

        [View coverage details in the action run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
        </details>
        EOF

    - name: Comment PR
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-path: pr_comment.md
        edit-mode: replace
        token: ${{ secrets.GITHUB_TOKEN }}
      if: github.event.pull_request.head.repo.full_name == github.repository

    - name: Log comment status
      run: |
        if [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]]; then
          echo "✅ PR comment posted successfully"
        else
          echo "ℹ️ Skipped PR comment - external fork lacks write permissions"
          echo "Check results above: Lint: ${{ steps.lint.outcome }}, TypeCheck: ${{ steps.typecheck.outcome }}, Tests: ${{ steps.test.outcome }}"
        fi

    - name: Fail workflow if critical checks failed
      run: |
        if [[ "${{ steps.test.outcome }}" != "success" ]]; then
          echo "❌ Tests failed - blocking PR merge"
          exit 1
        fi
        if [[ "${{ steps.typecheck.outcome }}" != "success" ]]; then
          echo "❌ TypeScript compilation failed - blocking PR merge"
          exit 1
        fi
        echo "✅ All critical checks passed"
